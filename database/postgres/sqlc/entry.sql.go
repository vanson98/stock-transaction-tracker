// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: entry.sql

package db

import (
	"context"
)

const createEntry = `-- name: CreateEntry :one
INSERT INTO entries(account_id,amount,"type")
VALUES($1,$2,$3)
RETURNING id, account_id, amount, created_at, type
`

type CreateEntryParams struct {
	AccountID int64     `json:"account_id"`
	Amount    int64     `json:"amount"`
	Type      EntryType `json:"type"`
}

func (q *Queries) CreateEntry(ctx context.Context, arg CreateEntryParams) (Entry, error) {
	row := q.db.QueryRow(ctx, createEntry, arg.AccountID, arg.Amount, arg.Type)
	var i Entry
	err := row.Scan(
		&i.ID,
		&i.AccountID,
		&i.Amount,
		&i.CreatedAt,
		&i.Type,
	)
	return i, err
}

const getEntryById = `-- name: GetEntryById :one
SELECT id, account_id, amount, created_at, type FROM entries
WHERE id=$1
`

func (q *Queries) GetEntryById(ctx context.Context, id int64) (Entry, error) {
	row := q.db.QueryRow(ctx, getEntryById, id)
	var i Entry
	err := row.Scan(
		&i.ID,
		&i.AccountID,
		&i.Amount,
		&i.CreatedAt,
		&i.Type,
	)
	return i, err
}
